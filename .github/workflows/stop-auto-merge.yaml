name: Stop Auto-Merge

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      release:
        type: string
        required: true

jobs:
  stop-auto-merge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        pip install -r utils/auto-merge/requirements.txt
    - name: Remove the release from config
      env:
        SMARTSHEET_ACCESS_TOKEN: ${{ secrets.SMARTSHEET_ACCESS_TOKEN }}
      shell: bash
      id: remove_release_from_config
      run: |
        RELEASE_TO_BE_REMOVED=DEFAULT
        
        if [[ "${{ github.event_name  }}" == "workflow_dispatch" ]]
        then
          RELEASE_TO_BE_REMOVED=${{ github.event.inputs.release }}
        fi
        echo "RELEASE_TO_BE_REMOVED=$RELEASE_TO_BE_REMOVED"
        echo $RELEASE_TO_BE_REMOVED > RELEASE_TO_BE_REMOVED
        python utils/auto-merge/stop_auto_merge.py --release $RELEASE_TO_BE_REMOVED
        RELEASE_TO_BE_REMOVED=$(cat RELEASE_TO_BE_REMOVED)
        echo "RELEASE_TO_BE_REMOVED=${RELEASE_TO_BE_REMOVED}" >> $GITHUB_OUTPUT

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Commit and push changes to main branch
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.extract_branch.outputs.branch }}
        message: "Removing ${{ steps.remove_release_from_config.outputs.RELEASE_TO_BE_REMOVED }} from releases.yaml"
        repository: red-hat-data-services/rhods-devops-infra