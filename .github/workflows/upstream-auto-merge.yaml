name: Upstream to Downstream - Auto-Merge

on:
  workflow_dispatch:
    inputs:
      repositories:
        type: choice
        description: select repositories
        options:
          - all
          - caikit-upstream
          - caikit
          - caikit-nlp-upstream
          - caikit-nlp
          - caikit-tgis-backend-upstream
          - caikit-tgis-backend
          - caikit-tgis-serving
          - codeflare-downstream
          - codeflare-upstream
          - data-science-pipelines
          - data-science-pipelines-operator
          - data-science-pipelines-tekton
          - distributed-workloads
          - fms-hf-tuning-dev
          - fms-hf-tuning-release
          - kserve
          - kubeflow
          - kuberay
          - modelmesh
          - modelmesh-runtime-adapter
          - modelmesh-serving
          - multi-cluster-app-dispatcher
          - odh-dashboard
          - odh-manifests
          - odh-model-controller
          - opendatahub-operator
          - rest-proxy
          - rhods-operator
          - text-generation-inference
          - trustyai-explainability
          - trustyai-service-operator
          - vllm
  workflow_call:
    inputs:
      repositories:
        required: true
        type: string
        description: Repository to sync, chosen from the list
  schedule:
    - cron: '0 0 * * *'

permissions:
  packages: write
  contents: read
  id-token: write

env:
  SOURCE_MAP: "src/config/upstream-source-map.yaml"
jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: matrix
        run: |
          value=$(yq -o json $SOURCE_MAP)
          value=$(echo $value | jq -r '.git' | jq -c 'map(select(.automerge == "yes"))' | sed 's/ //g' | awk NF=NF RS= OFS=)
          if ([[ "${{ github.event_name  }}" == "workflow_dispatch" ]] || [[ "${{ github.event_name  }}" == "workflow_call" ]]) && [[ "${{ github.event.inputs.repositories }}" != "all" ]]
          then
            value=$(echo $value | jq -c 'map(select(.name == "${{ github.event.inputs.repositories }}"))' | sed 's/ //g' | awk NF=NF RS= OFS=)
          fi
          echo "repos=$value"
          length=$(echo $value | jq '. | length')
          echo "$length repo(s) will be auto-merged by this workflow"
          if [[ $length -eq 0 ]]
          then 
            echo "No valid repos available for auto-merge"
            exit 1
          fi
          echo "::set-output name=value::$value"
  build:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        mapping: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Evaluate Destination Org
        id: evaluate-dest-org
        run: |
          DEST_ORG=RHDS
          if [[ "${{ matrix.mapping.dest.url }}" == *"opendatahub-io"* ]]; then
            DEST_ORG=ODH
          fi
          echo "::set-output name=DEST_ORG::$DEST_ORG"
      - name: Generate github-app token
        id: app-token
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets[format('{0}_DEVOPS_APP_ID', steps.evaluate-dest-org.outputs.DEST_ORG)] }}
          private_key: ${{ secrets[format('{0}_DEVOPS_APP_PRIVATE_KEY', steps.evaluate-dest-org.outputs.DEST_ORG)] }}
      - id: git-configuration
        name: Git Configuration
        run: |
          ignore="${{ matrix.mapping.ignore-files }}"
          IFS=', ' read -r -a exclusions <<< "$ignore"
          for exclusion in "${exclusions[@]}"
          do
             echo "$exclusion"
             echo "$exclusion merge=ours" >> .gitattributes
          done
      - name: GitHub Sync to Upstream Repository
        uses: dchourasia/sync-upstream-repo@1.05
        with:
          upstream_repo: "${{ matrix.mapping.src.url }}"
          upstream_branch: "${{ matrix.mapping.src.branch }}"
          downstream_repo: "${{ matrix.mapping.dest.url }}"
          downstream_branch: "${{ matrix.mapping.dest.branch }}"
          token: ${{ steps.app-token.outputs.token }}
          ignore_files: "${{ matrix.mapping.ignore }}"
          merge_args: "--no-edit"
