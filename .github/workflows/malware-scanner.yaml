name: Malware Scan

on:
  workflow_dispatch:
    inputs:
      repositories:
        type: string
        description: Advisory ID
  schedule:
    - cron: '1 * * * *'

permissions:
  packages: write
  contents: read
  id-token: write

env:
  SOURCE_MAP: "src/config/advisories.yaml"

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: matrix
        run: |
          value=$(yq -o json $SOURCE_MAP)
          value=$(echo $value | jq -r '.advisories' | sed 's/ //g' | awk NF=NF RS= OFS=)
          echo "advisories=$value"
          length=$(echo $value | jq '. | length')
          if [[ $length -eq 0 ]]
          then 
            echo "No valid advisories available for the scan"
            exit 1
          fi
          echo "::set-output name=value::$value"
  scan:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mapping: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Execute Malware Scan
        id: execute-malware-scan
        run: |
          pwd
          ls
          cd utils/malware-scan
          ./start_scan.sh ${{ matrix.mapping.adviosry_id }}
          infected_files_counts=$(cat results/*/*.txt | grep 'Infected files' | sed -r 's/Infected files: ([0-9]+)/\1/g')
          tot=0
          for i in ${infected_files_counts[@]}; do
            let tot+=$i
            echo $i
          done
          echo "Total: $tot"
          
          if [[ $tot > 0 ]]; then
            echo "Infected files found while scanning ${{ matrix.mapping.adviosry_id }} advisory for ${{ matrix.mapping.release }} release."
            exit 1
          else
            echo "No infected files found while scanning ${{ matrix.mapping.adviosry_id }} advisory for ${{ matrix.mapping.release }} release."
          fi
          

      - name: Slack Notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: ':red-warning: Malware Scan Failed!'
          SLACK_WEBHOOK: ${{ secrets.RHOAI_DEVOPS_SLACK_WEBHOOK }}